{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yusuf Uygur\\\\Documents\\\\GitHub\\\\KriptoMentorSon\\\\kriptoMentorWeb\\\\frontend\\\\src\\\\pages\\\\CommentsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { supabase } from '../lib/supabaseClient';\nimport { FaArrowLeft, FaPaperPlane, FaReply, FaTrash, FaEdit, FaCheck, FaTimes } from 'react-icons/fa';\nimport './CommentsPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CommentsPage() {\n  _s();\n  const {\n    signalId\n  } = useParams();\n  const navigate = useNavigate();\n  const [user, setUser] = useState(null);\n  const [profile, setProfile] = useState(null);\n  const [comments, setComments] = useState({\n    roots: [],\n    repliesMap: {}\n  });\n  const [newComment, setNewComment] = useState('');\n  const [replyingTo, setReplyingTo] = useState(null);\n  const [replyText, setReplyText] = useState('');\n  const [editingId, setEditingId] = useState(null);\n  const [editingText, setEditingText] = useState('');\n  const [loading, setLoading] = useState(true);\n\n  // 1) oturum ve profil\n  useEffect(() => {\n    supabase.auth.getSession().then(({\n      data: {\n        session\n      }\n    }) => {\n      if (!(session !== null && session !== void 0 && session.user)) return navigate('/auth');\n      setUser(session.user);\n      supabase.from('profiles').select('user_type, full_name').eq('user_id', session.user.id).maybeSingle().then(({\n        data\n      }) => setProfile(data));\n    });\n  }, [navigate]);\n\n  // 2) yorumları çek ve gruplandır\n  useEffect(() => {\n    if (!signalId) return;\n    setLoading(true);\n    supabase.from('comments').select('id, user_id, content, created_at, parent_id').eq('signal_id', signalId).order('created_at', {\n      ascending: true\n    }).then(({\n      data,\n      error\n    }) => {\n      if (error) throw error;\n      // profil isimlerini çek\n      const byUser = [...new Set(data.map(r => r.user_id))];\n      supabase.from('profiles').select('user_id, full_name').in('user_id', byUser).then(({\n        data: profs\n      }) => {\n        const nameMap = {};\n        profs.forEach(p => nameMap[p.user_id] = p.full_name || 'Anonim');\n        // zenginleştir\n        const enriched = data.map(c => ({\n          ...c,\n          author: nameMap[c.user_id] || 'Anonim'\n        }));\n        const roots = enriched.filter(c => !c.parent_id);\n        const repliesMap = {};\n        enriched.forEach(c => {\n          if (c.parent_id) {\n            repliesMap[c.parent_id] = repliesMap[c.parent_id] || [];\n            repliesMap[c.parent_id].push(c);\n          }\n        });\n        setComments({\n          roots,\n          repliesMap\n        });\n      });\n    }).catch(console.error).finally(() => setLoading(false));\n  }, [signalId]);\n  const postComment = async () => {\n    if (!newComment.trim()) return;\n    await supabase.from('comments').insert({\n      signal_id: signalId,\n      user_id: user.id,\n      content: newComment.trim(),\n      parent_id: null\n    });\n    setNewComment('');\n    // yenile\n    setLoading(true);\n    setTimeout(() => setLoading(false), 500);\n    // basitçe yeniden yükle\n    supabase.from('comments').select('id, user_id, content, created_at, parent_id').eq('signal_id', signalId).order('created_at', {\n      ascending: true\n    }).then(({\n      data\n    }) => {\n      const roots = data.filter(c => !c.parent_id);\n      const repliesMap = {};\n      data.forEach(c => {\n        if (c.parent_id) {\n          repliesMap[c.parent_id] = repliesMap[c.parent_id] || [];\n          repliesMap[c.parent_id].push(c);\n        }\n      });\n      setComments({\n        roots,\n        repliesMap\n      });\n    });\n  };\n  const postReply = async () => {\n    if (!replyText.trim() || !replyingTo) return;\n    await supabase.from('comments').insert({\n      signal_id,\n      user_id: user.id,\n      content: replyText.trim(),\n      parent_id: replyingTo\n    });\n    setReplyText('');\n    setReplyingTo(null);\n    postComment(); // basitçe yenile\n  };\n  const startEdit = c => {\n    setEditingId(c.id);\n    setEditingText(c.content);\n  };\n  const saveEdit = async () => {\n    if (!editingText.trim()) return setEditingId(null);\n    await supabase.from('comments').update({\n      content: editingText.trim()\n    }).eq('id', editingId);\n    setEditingId(null);\n    setEditingText('');\n    postComment();\n  };\n  const deleteComment = id => {\n    if (!window.confirm('Bu yorumu silmek istediğinize emin misiniz?')) return;\n    supabase.from('comments').delete().eq('id', id).then(() => postComment());\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-page loader\",\n      children: \"Y\\xFCkleniyor\\u2026\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"back-btn\",\n      onClick: () => navigate(-1),\n      children: [/*#__PURE__*/_jsxDEV(FaArrowLeft, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), \" Geri\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Yorumlar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-list\",\n      children: [comments.roots.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"empty\",\n        children: \"Hen\\xFCz yorum yok.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), comments.roots.map(c => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(CommentItem, {\n          comment: c,\n          isReply: false,\n          onReply: () => setReplyingTo(c.id),\n          onEdit: () => startEdit(c),\n          onDelete: () => deleteComment(c.id),\n          editingId: editingId,\n          editingText: editingText,\n          setEditingText: setEditingText,\n          saveEdit: saveEdit,\n          profile: profile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), (comments.repliesMap[c.id] || []).map(r => /*#__PURE__*/_jsxDEV(CommentItem, {\n          comment: r,\n          isReply: true,\n          onReply: () => setReplyingTo(r.id),\n          onEdit: () => startEdit(r),\n          onDelete: () => deleteComment(r.id),\n          editingId: editingId,\n          editingText: editingText,\n          setEditingText: setEditingText,\n          saveEdit: saveEdit,\n          profile: profile\n        }, r.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 15\n        }, this))]\n      }, c.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), (profile === null || profile === void 0 ? void 0 : profile.user_type) === 'investor' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-comment\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Yorum yaz...\",\n        value: newComment,\n        onChange: e => setNewComment(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: postComment,\n        children: /*#__PURE__*/_jsxDEV(FaPaperPlane, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n}\n\n// Ayrık bir yorum kutusu bileşeni\n_s(CommentsPage, \"weSYiR3xX6ZL44LaL52qxQneKWs=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = CommentsPage;\nfunction CommentItem({\n  comment,\n  isReply,\n  onReply,\n  onEdit,\n  onDelete,\n  editingId,\n  editingText,\n  setEditingText,\n  saveEdit,\n  profile\n}) {\n  const time = new Date(comment.created_at).toLocaleDateString() + ' ' + new Date(comment.created_at).toLocaleTimeString([], {\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `comment-box${isReply ? ' reply' : ''}`,\n    children: editingId === comment.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"edit-textarea\",\n        value: editingText,\n        onChange: e => setEditingText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setEditingText(''),\n          children: /*#__PURE__*/_jsxDEV(FaTimes, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 56\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: saveEdit,\n          children: /*#__PURE__*/_jsxDEV(FaCheck, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"author\",\n          children: comment.author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"time\",\n          children: time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-body\",\n        children: comment.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-actions\",\n        children: [(profile === null || profile === void 0 ? void 0 : profile.user_type) === 'investor' && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"act\",\n          onClick: onReply,\n          children: [/*#__PURE__*/_jsxDEV(FaReply, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 57\n          }, this), \" Cevapla\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 15\n        }, this), comment.user_id === (profile === null || profile === void 0 ? void 0 : profile.user_id) && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"act\",\n            onClick: onEdit,\n            children: /*#__PURE__*/_jsxDEV(FaEdit, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 58\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"act delete\",\n            onClick: onDelete,\n            children: /*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 67\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n}\n_c2 = CommentItem;\nvar _c, _c2;\n$RefreshReg$(_c, \"CommentsPage\");\n$RefreshReg$(_c2, \"CommentItem\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","supabase","FaArrowLeft","FaPaperPlane","FaReply","FaTrash","FaEdit","FaCheck","FaTimes","jsxDEV","_jsxDEV","Fragment","_Fragment","CommentsPage","_s","signalId","navigate","user","setUser","profile","setProfile","comments","setComments","roots","repliesMap","newComment","setNewComment","replyingTo","setReplyingTo","replyText","setReplyText","editingId","setEditingId","editingText","setEditingText","loading","setLoading","auth","getSession","then","data","session","from","select","eq","id","maybeSingle","order","ascending","error","byUser","Set","map","r","user_id","in","profs","nameMap","forEach","p","full_name","enriched","c","author","filter","parent_id","push","catch","console","finally","postComment","trim","insert","signal_id","content","setTimeout","postReply","startEdit","saveEdit","update","deleteComment","window","confirm","delete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","CommentItem","comment","isReply","onReply","onEdit","onDelete","user_type","placeholder","value","onChange","e","target","_c","time","Date","created_at","toLocaleDateString","toLocaleTimeString","hour","minute","_c2","$RefreshReg$"],"sources":["C:/Users/Yusuf Uygur/Documents/GitHub/KriptoMentorSon/kriptoMentorWeb/frontend/src/pages/CommentsPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate }     from 'react-router-dom';\r\nimport { supabase }                   from '../lib/supabaseClient';\r\nimport { FaArrowLeft, FaPaperPlane, FaReply, FaTrash, FaEdit, FaCheck, FaTimes } from 'react-icons/fa';\r\nimport './CommentsPage.css';\r\n\r\nexport default function CommentsPage() {\r\n  const { signalId } = useParams();\r\n  const navigate     = useNavigate();\r\n\r\n  const [user, setUser]       = useState(null);\r\n  const [profile, setProfile] = useState(null);\r\n  const [comments, setComments] = useState({ roots: [], repliesMap: {} });\r\n  const [newComment, setNewComment] = useState('');\r\n  const [replyingTo, setReplyingTo] = useState(null);\r\n  const [replyText, setReplyText]   = useState('');\r\n  const [editingId, setEditingId]   = useState(null);\r\n  const [editingText, setEditingText] = useState('');\r\n  const [loading, setLoading]       = useState(true);\r\n\r\n  // 1) oturum ve profil\r\n  useEffect(() => {\r\n    supabase.auth.getSession().then(({ data:{ session } }) => {\r\n      if (!session?.user) return navigate('/auth');\r\n      setUser(session.user);\r\n      supabase\r\n        .from('profiles')\r\n        .select('user_type, full_name')\r\n        .eq('user_id', session.user.id)\r\n        .maybeSingle()\r\n        .then(({ data }) => setProfile(data));\r\n    });\r\n  }, [navigate]);\r\n\r\n  // 2) yorumları çek ve gruplandır\r\n  useEffect(() => {\r\n    if (!signalId) return;\r\n    setLoading(true);\r\n    supabase\r\n      .from('comments')\r\n      .select('id, user_id, content, created_at, parent_id')\r\n      .eq('signal_id', signalId)\r\n      .order('created_at', { ascending: true })\r\n      .then(({ data, error }) => {\r\n        if (error) throw error;\r\n        // profil isimlerini çek\r\n        const byUser = [...new Set(data.map(r=>r.user_id))];\r\n        supabase\r\n          .from('profiles')\r\n          .select('user_id, full_name')\r\n          .in('user_id', byUser)\r\n          .then(({ data: profs }) => {\r\n            const nameMap = {};\r\n            profs.forEach(p => nameMap[p.user_id] = p.full_name || 'Anonim');\r\n            // zenginleştir\r\n            const enriched = data.map(c => ({\r\n              ...c,\r\n              author: nameMap[c.user_id] || 'Anonim'\r\n            }));\r\n            const roots = enriched.filter(c => !c.parent_id);\r\n            const repliesMap = {};\r\n            enriched.forEach(c => {\r\n              if (c.parent_id) {\r\n                repliesMap[c.parent_id] = repliesMap[c.parent_id]||[];\r\n                repliesMap[c.parent_id].push(c);\r\n              }\r\n            });\r\n            setComments({ roots, repliesMap });\r\n          });\r\n      })\r\n      .catch(console.error)\r\n      .finally(() => setLoading(false));\r\n  }, [signalId]);\r\n\r\n  const postComment = async () => {\r\n    if (!newComment.trim()) return;\r\n    await supabase\r\n      .from('comments')\r\n      .insert({ signal_id: signalId, user_id: user.id, content: newComment.trim(), parent_id: null });\r\n    setNewComment('');\r\n    // yenile\r\n    setLoading(true);\r\n    setTimeout(() => setLoading(false), 500);\r\n    // basitçe yeniden yükle\r\n    supabase\r\n      .from('comments')\r\n      .select('id, user_id, content, created_at, parent_id')\r\n      .eq('signal_id', signalId)\r\n      .order('created_at', { ascending: true })\r\n      .then(({ data }) => {\r\n        const roots = data.filter(c => !c.parent_id);\r\n        const repliesMap = {};\r\n        data.forEach(c => {\r\n          if (c.parent_id) {\r\n            repliesMap[c.parent_id] = repliesMap[c.parent_id]||[];\r\n            repliesMap[c.parent_id].push(c);\r\n          }\r\n        });\r\n        setComments({ roots, repliesMap });\r\n      });\r\n  };\r\n\r\n  const postReply = async () => {\r\n    if (!replyText.trim() || !replyingTo) return;\r\n    await supabase\r\n      .from('comments')\r\n      .insert({ signal_id, user_id: user.id, content: replyText.trim(), parent_id: replyingTo });\r\n    setReplyText('');\r\n    setReplyingTo(null);\r\n    postComment(); // basitçe yenile\r\n  };\r\n\r\n  const startEdit = (c) => {\r\n    setEditingId(c.id);\r\n    setEditingText(c.content);\r\n  };\r\n  const saveEdit = async () => {\r\n    if (!editingText.trim()) return setEditingId(null);\r\n    await supabase\r\n      .from('comments')\r\n      .update({ content: editingText.trim() })\r\n      .eq('id', editingId);\r\n    setEditingId(null);\r\n    setEditingText('');\r\n    postComment();\r\n  };\r\n\r\n  const deleteComment = (id) => {\r\n    if (!window.confirm('Bu yorumu silmek istediğinize emin misiniz?')) return;\r\n    supabase\r\n      .from('comments')\r\n      .delete()\r\n      .eq('id', id)\r\n      .then(() => postComment());\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"comments-page loader\">Yükleniyor…</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"comments-page\">\r\n      <button className=\"back-btn\" onClick={() => navigate(-1)}>\r\n        <FaArrowLeft /> Geri\r\n      </button>\r\n      <h2>Yorumlar</h2>\r\n\r\n      <div className=\"comments-list\">\r\n        {comments.roots.length === 0 && (\r\n          <p className=\"empty\">Henüz yorum yok.</p>\r\n        )}\r\n        {comments.roots.map(c => (\r\n          <React.Fragment key={c.id}>\r\n            <CommentItem\r\n              comment={c}\r\n              isReply={false}\r\n              onReply={() => setReplyingTo(c.id)}\r\n              onEdit={() => startEdit(c)}\r\n              onDelete={() => deleteComment(c.id)}\r\n              editingId={editingId}\r\n              editingText={editingText}\r\n              setEditingText={setEditingText}\r\n              saveEdit={saveEdit}\r\n              profile={profile}\r\n            />\r\n            {(comments.repliesMap[c.id]||[]).map(r => (\r\n              <CommentItem\r\n                key={r.id}\r\n                comment={r}\r\n                isReply={true}\r\n                onReply={() => setReplyingTo(r.id)}\r\n                onEdit={() => startEdit(r)}\r\n                onDelete={() => deleteComment(r.id)}\r\n                editingId={editingId}\r\n                editingText={editingText}\r\n                setEditingText={setEditingText}\r\n                saveEdit={saveEdit}\r\n                profile={profile}\r\n              />\r\n            ))}\r\n          </React.Fragment>\r\n        ))}\r\n      </div>\r\n\r\n      {profile?.user_type === 'investor' && (\r\n        <div className=\"new-comment\">\r\n          <textarea\r\n            placeholder=\"Yorum yaz...\"\r\n            value={newComment}\r\n            onChange={e => setNewComment(e.target.value)}\r\n          />\r\n          <button onClick={postComment}><FaPaperPlane /></button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Ayrık bir yorum kutusu bileşeni\r\nfunction CommentItem({\r\n  comment, isReply,\r\n  onReply, onEdit, onDelete,\r\n  editingId, editingText, setEditingText, saveEdit,\r\n  profile\r\n}) {\r\n  const time = new Date(comment.created_at).toLocaleDateString() + ' ' +\r\n               new Date(comment.created_at).toLocaleTimeString([], {hour:'2-digit',minute:'2-digit'});\r\n  return (\r\n    <div className={`comment-box${isReply?' reply':''}`}>\r\n      {editingId === comment.id ? (\r\n        <>\r\n          <textarea\r\n            className=\"edit-textarea\"\r\n            value={editingText}\r\n            onChange={e => setEditingText(e.target.value)}\r\n          />\r\n          <div className=\"edit-actions\">\r\n            <button onClick={() => setEditingText('')}><FaTimes /></button>\r\n            <button onClick={saveEdit}><FaCheck /></button>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className=\"comment-header\">\r\n            <span className=\"author\">{comment.author}</span>\r\n            <span className=\"time\">{time}</span>\r\n          </div>\r\n          <div className=\"comment-body\">{comment.content}</div>\r\n          <div className=\"comment-actions\">\r\n            {profile?.user_type === 'investor' && (\r\n              <button className=\"act\" onClick={onReply}><FaReply /> Cevapla</button>\r\n            )}\r\n            {comment.user_id === profile?.user_id && (\r\n              <>\r\n                <button className=\"act\" onClick={onEdit}><FaEdit /></button>\r\n                <button className=\"act delete\" onClick={onDelete}><FaTrash /></button>\r\n              </>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}