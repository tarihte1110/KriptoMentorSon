{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yusuf Uygur\\\\Documents\\\\GitHub\\\\KriptoMentorSon\\\\kriptoMentorWeb\\\\frontend\\\\src\\\\pages\\\\HomePage.js\",\n  _s = $RefreshSig$();\n// src/pages/HomePage.js\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { SignalsContext } from '../context/SignalsContext';\nimport { supabase } from '../lib/supabaseClient';\nimport './HomePage.css';\nimport { FaThumbsUp, FaThumbsDown, FaComment, FaUserCircle } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HomePage() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    signals\n  } = useContext(SignalsContext);\n  const [user, setUser] = useState(null);\n  const [myProfileType, setMyProfileType] = useState(null);\n  const [profilesMap, setProfilesMap] = useState({});\n  const [reactionsMap, setReactionsMap] = useState({});\n  const [commentsCountMap, setCommentsCountMap] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  // 1) Oturum ve kendi profil tipini çek\n  useEffect(() => {\n    (async () => {\n      const {\n        data: {\n          session\n        }\n      } = await supabase.auth.getSession();\n      const usr = session === null || session === void 0 ? void 0 : session.user;\n      if (!usr) return;\n      setUser(usr);\n      const {\n        data: prof\n      } = await supabase.from('profiles').select('user_type').eq('user_id', usr.id).maybeSingle();\n      setMyProfileType((prof === null || prof === void 0 ? void 0 : prof.user_type) || null);\n    })();\n  }, []);\n\n  // 2) Profiller, reaksiyonlar ve yorum sayıları\n  useEffect(() => {\n    if (!user || !signals.length) return;\n    (async () => {\n      setLoading(true);\n\n      // Profiller\n      const {\n        data: profs\n      } = await supabase.from('profiles').select('user_id, full_name');\n      const pMap = {};\n      profs.forEach(p => {\n        pMap[p.user_id] = p.full_name || 'Anonim';\n      });\n      setProfilesMap(pMap);\n\n      // Reaksiyonlar\n      const {\n        data: reacts\n      } = await supabase.from('reactions').select('signal_id, user_id, type');\n      const rMap = {};\n      signals.forEach(s => {\n        rMap[s.id] = {\n          likeCount: 0,\n          dislikeCount: 0,\n          myType: null\n        };\n      });\n      reacts.forEach(r => {\n        const e = rMap[r.signal_id];\n        if (!e) return;\n        if (r.type === 'like') e.likeCount++;else e.dislikeCount++;\n        if (r.user_id === user.id) e.myType = r.type;\n      });\n      setReactionsMap(rMap);\n\n      // Yorum sayıları\n      const {\n        data: comms\n      } = await supabase.from('comments').select('signal_id');\n      const cMap = {};\n      signals.forEach(s => {\n        cMap[s.id] = 0;\n      });\n      comms.forEach(c => {\n        if (cMap[c.signal_id] !== undefined) {\n          cMap[c.signal_id]++;\n        }\n      });\n      setCommentsCountMap(cMap);\n      setLoading(false);\n    })();\n  }, [user, signals]);\n\n  // 3) Tepki handler (sadece investor ise)\n  const handleReaction = async (signalId, type) => {\n    var _reactionsMap$signalI;\n    if (myProfileType !== 'investor') return;\n    const prev = (_reactionsMap$signalI = reactionsMap[signalId]) === null || _reactionsMap$signalI === void 0 ? void 0 : _reactionsMap$signalI.myType;\n    if (prev === type) {\n      await supabase.from('reactions').delete().match({\n        signal_id: signalId,\n        user_id: user.id\n      });\n    } else if (prev) {\n      await supabase.from('reactions').update({\n        type\n      }).match({\n        signal_id: signalId,\n        user_id: user.id\n      });\n    } else {\n      await supabase.from('reactions').insert({\n        signal_id: signalId,\n        user_id: user.id,\n        type\n      });\n    }\n\n    // Yeniden çek\n    const {\n      data: reacts\n    } = await supabase.from('reactions').select('signal_id, user_id, type');\n    const rMap = {};\n    signals.forEach(s => {\n      rMap[s.id] = {\n        likeCount: 0,\n        dislikeCount: 0,\n        myType: null\n      };\n    });\n    reacts.forEach(r => {\n      const e = rMap[r.signal_id];\n      if (!e) return;\n      if (r.type === 'like') e.likeCount++;else e.dislikeCount++;\n      if (r.user_id === user.id) e.myType = r.type;\n    });\n    setReactionsMap(rMap);\n  };\n\n  // 4) Yorum sayfasına git (tüm kullanıcılar görebilsin)\n  const goComments = signalId => {\n    navigate(`/comments/${signalId}`);\n  };\n\n  // 5) Trader profiline git (düzgün rota)\n  const goProfile = userId => {\n    navigate(`/profile/${userId}`);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-page loader\",\n      children: \"Y\\xFCkleniyor\\u2026\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-page\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"signals-list\",\n      children: signals.map(item => {\n        const date = new Date(item.timestamp).toLocaleDateString();\n        const time = new Date(item.timestamp).toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        });\n        const traderName = profilesMap[item.userId] || 'Anonim';\n        const react = reactionsMap[item.id] || {\n          likeCount: 0,\n          dislikeCount: 0,\n          myType: null\n        };\n        const commCount = commentsCountMap[item.id] || 0;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"signal-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-row\",\n            children: [/*#__PURE__*/_jsxDEV(FaUserCircle, {\n              size: 18,\n              color: \"#1a73e8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"user-name\",\n              onClick: () => goProfile(item.userId),\n              children: traderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"symbol\",\n              children: item.symbol\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"timestamp\",\n              children: [date, \" \", time]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"meta-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: `badge ${item.direction === 'LONG' ? 'long' : 'short'}`,\n              children: item.direction\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"badge timeframe\",\n              children: item.timeFrame.toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"divider\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Entry Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 36\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: item.entryPrice\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 60\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Leverage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 36\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [item.recommendedLeverage, \"x\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 57\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"divider\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this), item.targets.map((t, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Target \", i + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"target\",\n              children: t\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 19\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Stop Loss\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 36\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stop\",\n              children: item.stopLoss\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 58\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"divider\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"actions-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: `action-button like ${react.myType === 'like' ? 'active' : ''}`,\n              onClick: () => handleReaction(item.id, 'like'),\n              disabled: myProfileType !== 'investor',\n              children: [/*#__PURE__*/_jsxDEV(FaThumbsUp, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"action-count\",\n                children: react.likeCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 34\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `action-button dislike ${react.myType === 'dislike' ? 'active' : ''}`,\n              onClick: () => handleReaction(item.id, 'dislike'),\n              disabled: myProfileType !== 'investor',\n              children: [/*#__PURE__*/_jsxDEV(FaThumbsDown, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"action-count\",\n                children: react.dislikeCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 36\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"action-button\",\n              onClick: () => goComments(item.id),\n              children: [/*#__PURE__*/_jsxDEV(FaComment, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"action-count\",\n                children: commCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n}\n_s(HomePage, \"8DEqf7Sn1fdlqPjvWH3bwGovb0A=\", false, function () {\n  return [useNavigate];\n});\n_c = HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useContext","useEffect","useState","useNavigate","SignalsContext","supabase","FaThumbsUp","FaThumbsDown","FaComment","FaUserCircle","jsxDEV","_jsxDEV","HomePage","_s","navigate","signals","user","setUser","myProfileType","setMyProfileType","profilesMap","setProfilesMap","reactionsMap","setReactionsMap","commentsCountMap","setCommentsCountMap","loading","setLoading","data","session","auth","getSession","usr","prof","from","select","eq","id","maybeSingle","user_type","length","profs","pMap","forEach","p","user_id","full_name","reacts","rMap","s","likeCount","dislikeCount","myType","r","e","signal_id","type","comms","cMap","c","undefined","handleReaction","signalId","_reactionsMap$signalI","prev","delete","match","update","insert","goComments","goProfile","userId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","date","Date","timestamp","toLocaleDateString","time","toLocaleTimeString","hour","minute","traderName","react","commCount","size","color","onClick","symbol","direction","timeFrame","toUpperCase","entryPrice","recommendedLeverage","targets","t","i","stopLoss","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Yusuf Uygur/Documents/GitHub/KriptoMentorSon/kriptoMentorWeb/frontend/src/pages/HomePage.js"],"sourcesContent":["// src/pages/HomePage.js\r\n\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useNavigate }            from 'react-router-dom';\r\nimport { SignalsContext }         from '../context/SignalsContext';\r\nimport { supabase }               from '../lib/supabaseClient';\r\nimport './HomePage.css';\r\nimport {\r\n  FaThumbsUp,\r\n  FaThumbsDown,\r\n  FaComment,\r\n  FaUserCircle\r\n} from 'react-icons/fa';\r\n\r\nexport default function HomePage() {\r\n  const navigate      = useNavigate();\r\n  const { signals }   = useContext(SignalsContext);\r\n\r\n  const [user, setUser]                   = useState(null);\r\n  const [myProfileType, setMyProfileType] = useState(null);\r\n  const [profilesMap, setProfilesMap]     = useState({});\r\n  const [reactionsMap, setReactionsMap]   = useState({});\r\n  const [commentsCountMap, setCommentsCountMap] = useState({});\r\n  const [loading, setLoading]             = useState(true);\r\n\r\n  // 1) Oturum ve kendi profil tipini çek\r\n  useEffect(() => {\r\n    (async () => {\r\n      const { data:{ session } } = await supabase.auth.getSession();\r\n      const usr = session?.user;\r\n      if (!usr) return;\r\n      setUser(usr);\r\n\r\n      const { data: prof } = await supabase\r\n        .from('profiles')\r\n        .select('user_type')\r\n        .eq('user_id', usr.id)\r\n        .maybeSingle();\r\n      setMyProfileType(prof?.user_type || null);\r\n    })();\r\n  }, []);\r\n\r\n  // 2) Profiller, reaksiyonlar ve yorum sayıları\r\n  useEffect(() => {\r\n    if (!user || !signals.length) return;\r\n\r\n    (async () => {\r\n      setLoading(true);\r\n\r\n      // Profiller\r\n      const { data: profs } = await supabase\r\n        .from('profiles')\r\n        .select('user_id, full_name');\r\n      const pMap = {};\r\n      profs.forEach(p => {\r\n        pMap[p.user_id] = p.full_name || 'Anonim';\r\n      });\r\n      setProfilesMap(pMap);\r\n\r\n      // Reaksiyonlar\r\n      const { data: reacts } = await supabase\r\n        .from('reactions')\r\n        .select('signal_id, user_id, type');\r\n      const rMap = {};\r\n      signals.forEach(s => {\r\n        rMap[s.id] = { likeCount: 0, dislikeCount: 0, myType: null };\r\n      });\r\n      reacts.forEach(r => {\r\n        const e = rMap[r.signal_id];\r\n        if (!e) return;\r\n        if (r.type === 'like')  e.likeCount++;\r\n        else                     e.dislikeCount++;\r\n        if (r.user_id === user.id) e.myType = r.type;\r\n      });\r\n      setReactionsMap(rMap);\r\n\r\n      // Yorum sayıları\r\n      const { data: comms } = await supabase\r\n        .from('comments')\r\n        .select('signal_id');\r\n      const cMap = {};\r\n      signals.forEach(s => {\r\n        cMap[s.id] = 0;\r\n      });\r\n      comms.forEach(c => {\r\n        if (cMap[c.signal_id] !== undefined) {\r\n          cMap[c.signal_id]++;\r\n        }\r\n      });\r\n      setCommentsCountMap(cMap);\r\n\r\n      setLoading(false);\r\n    })();\r\n  }, [user, signals]);\r\n\r\n  // 3) Tepki handler (sadece investor ise)\r\n  const handleReaction = async (signalId, type) => {\r\n    if (myProfileType !== 'investor') return;\r\n\r\n    const prev = reactionsMap[signalId]?.myType;\r\n    if (prev === type) {\r\n      await supabase\r\n        .from('reactions')\r\n        .delete()\r\n        .match({ signal_id: signalId, user_id: user.id });\r\n    } else if (prev) {\r\n      await supabase\r\n        .from('reactions')\r\n        .update({ type })\r\n        .match({ signal_id: signalId, user_id: user.id });\r\n    } else {\r\n      await supabase\r\n        .from('reactions')\r\n        .insert({ signal_id: signalId, user_id: user.id, type });\r\n    }\r\n\r\n    // Yeniden çek\r\n    const { data: reacts } = await supabase\r\n      .from('reactions')\r\n      .select('signal_id, user_id, type');\r\n    const rMap = {};\r\n    signals.forEach(s => {\r\n      rMap[s.id] = { likeCount: 0, dislikeCount: 0, myType: null };\r\n    });\r\n    reacts.forEach(r => {\r\n      const e = rMap[r.signal_id];\r\n      if (!e) return;\r\n      if (r.type === 'like')  e.likeCount++;\r\n      else                     e.dislikeCount++;\r\n      if (r.user_id === user.id) e.myType = r.type;\r\n    });\r\n    setReactionsMap(rMap);\r\n  };\r\n\r\n  // 4) Yorum sayfasına git (tüm kullanıcılar görebilsin)\r\n  const goComments = (signalId) => {\r\n    navigate(`/comments/${signalId}`);\r\n  };\r\n\r\n  // 5) Trader profiline git (düzgün rota)\r\n  const goProfile = userId => {\r\n    navigate(`/profile/${userId}`);\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"home-page loader\">Yükleniyor…</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"home-page\">\r\n      <ul className=\"signals-list\">\r\n        {signals.map(item => {\r\n          const date = new Date(item.timestamp).toLocaleDateString();\r\n          const time = new Date(item.timestamp).toLocaleTimeString([], {\r\n            hour: '2-digit',\r\n            minute: '2-digit'\r\n          });\r\n          const traderName = profilesMap[item.userId] || 'Anonim';\r\n          const react      = reactionsMap[item.id] || { likeCount: 0, dislikeCount: 0, myType: null };\r\n          const commCount  = commentsCountMap[item.id] || 0;\r\n\r\n          return (\r\n            <li key={item.id} className=\"signal-card\">\r\n              <div className=\"user-row\">\r\n                <FaUserCircle size={18} color=\"#1a73e8\" />\r\n                <button\r\n                  className=\"user-name\"\r\n                  onClick={() => goProfile(item.userId)}\r\n                >\r\n                  {traderName}\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"header-row\">\r\n                <h3 className=\"symbol\">{item.symbol}</h3>\r\n                <small className=\"timestamp\">{date} {time}</small>\r\n              </div>\r\n\r\n              <div className=\"meta-row\">\r\n                <span className={`badge ${item.direction==='LONG' ? 'long' : 'short'}`}>\r\n                  {item.direction}\r\n                </span>\r\n                <span className=\"badge timeframe\">\r\n                  {item.timeFrame.toUpperCase()}\r\n                </span>\r\n              </div>\r\n\r\n              <div className=\"divider\" />\r\n\r\n              <div className=\"row\"><span>Entry Price</span><span>{item.entryPrice}</span></div>\r\n              <div className=\"row\"><span>Leverage</span><span>{item.recommendedLeverage}x</span></div>\r\n\r\n              <div className=\"divider\" />\r\n\r\n              {item.targets.map((t, i) => (\r\n                <div key={i} className=\"row\">\r\n                  <span>Target {i+1}</span>\r\n                  <span className=\"target\">{t}</span>\r\n                </div>\r\n              ))}\r\n\r\n              <div className=\"row\"><span>Stop Loss</span><span className=\"stop\">{item.stopLoss}</span></div>\r\n\r\n              <div className=\"divider\" />\r\n\r\n              <div className=\"actions-row\">\r\n                {/* Yalnızca investor tepki verebilir */}\r\n                <button\r\n                  className={`action-button like ${react.myType==='like' ? 'active' : ''}`}\r\n                  onClick={() => handleReaction(item.id, 'like')}\r\n                  disabled={myProfileType!=='investor'}\r\n                >\r\n                  <FaThumbsUp /> <span className=\"action-count\">{react.likeCount}</span>\r\n                </button>\r\n                <button\r\n                  className={`action-button dislike ${react.myType==='dislike' ? 'active' : ''}`}\r\n                  onClick={() => handleReaction(item.id, 'dislike')}\r\n                  disabled={myProfileType!=='investor'}\r\n                >\r\n                  <FaThumbsDown /> <span className=\"action-count\">{react.dislikeCount}</span>\r\n                </button>\r\n                {/* yorum butonu artık hiçbir zaman disabled değil */}\r\n                <button\r\n                  className=\"action-button\"\r\n                  onClick={() => goComments(item.id)}\r\n                >\r\n                  <FaComment /> <span className=\"action-count\">{commCount}</span>\r\n                </button>\r\n              </div>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}