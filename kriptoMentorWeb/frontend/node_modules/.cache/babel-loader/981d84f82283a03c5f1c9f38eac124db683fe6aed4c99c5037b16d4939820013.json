{"ast":null,"code":"// src/services/auth.js\nimport{supabase}from'../lib/supabaseClient';export const signUp=(email,password)=>supabase.auth.signUp({email,password},{redirectTo:window.location.origin+'/profile'});export const signIn=(email,password)=>supabase.auth.signInWithPassword({email,password});export const signOut=()=>supabase.auth.signOut();export const getUser=async()=>{const{data:{user},error}=await supabase.auth.getUser();if(error)throw error;return user;};","map":{"version":3,"names":["supabase","signUp","email","password","auth","redirectTo","window","location","origin","signIn","signInWithPassword","signOut","getUser","data","user","error"],"sources":["C:/Users/Yusuf Uygur/Documents/GitHub/KriptoMentorSon/kriptoMentorWeb/frontend/src/services/auth.js"],"sourcesContent":["// src/services/auth.js\r\nimport { supabase } from '../lib/supabaseClient';\r\n\r\nexport const signUp = (email, password) =>\r\n  supabase.auth.signUp(\r\n    { email, password },\r\n    { redirectTo: window.location.origin + '/profile' }\r\n  );\r\n\r\nexport const signIn = (email, password) =>\r\n  supabase.auth.signInWithPassword({ email, password });\r\n\r\nexport const signOut = () =>\r\n  supabase.auth.signOut();\r\n\r\nexport const getUser = async () => {\r\n  const { data: { user }, error } = await supabase.auth.getUser();\r\n  if (error) throw error;\r\n  return user;\r\n};\r\n"],"mappings":"AAAA;AACA,OAASA,QAAQ,KAAQ,uBAAuB,CAEhD,MAAO,MAAM,CAAAC,MAAM,CAAGA,CAACC,KAAK,CAAEC,QAAQ,GACpCH,QAAQ,CAACI,IAAI,CAACH,MAAM,CAClB,CAAEC,KAAK,CAAEC,QAAS,CAAC,CACnB,CAAEE,UAAU,CAAEC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAG,UAAW,CACpD,CAAC,CAEH,MAAO,MAAM,CAAAC,MAAM,CAAGA,CAACP,KAAK,CAAEC,QAAQ,GACpCH,QAAQ,CAACI,IAAI,CAACM,kBAAkB,CAAC,CAAER,KAAK,CAAEC,QAAS,CAAC,CAAC,CAEvD,MAAO,MAAM,CAAAQ,OAAO,CAAGA,CAAA,GACrBX,QAAQ,CAACI,IAAI,CAACO,OAAO,CAAC,CAAC,CAEzB,MAAO,MAAM,CAAAC,OAAO,CAAG,KAAAA,CAAA,GAAY,CACjC,KAAM,CAAEC,IAAI,CAAE,CAAEC,IAAK,CAAC,CAAEC,KAAM,CAAC,CAAG,KAAM,CAAAf,QAAQ,CAACI,IAAI,CAACQ,OAAO,CAAC,CAAC,CAC/D,GAAIG,KAAK,CAAE,KAAM,CAAAA,KAAK,CACtB,MAAO,CAAAD,IAAI,CACb,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}