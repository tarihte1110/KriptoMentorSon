{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yusuf Uygur\\\\Documents\\\\GitHub\\\\KriptoMentorSon\\\\kriptoMentorWeb\\\\frontend\\\\src\\\\context\\\\SignalsContext.js\",\n  _s = $RefreshSig$();\n// src/context/SignalsContext.js\nimport React, { createContext, useState, useEffect } from 'react';\nimport { supabase } from '../lib/supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SignalsContext = /*#__PURE__*/createContext({\n  signals: [],\n  addSignal: async () => {}\n});\nexport function SignalsProvider({\n  children\n}) {\n  _s();\n  const [signals, setSignals] = useState([]);\n\n  // Satır verisini JS modeline çeviren yardımcı\n  const mapSignal = r => ({\n    id: r.id,\n    userId: r.user_id,\n    username: r.username,\n    symbol: r.symbol,\n    direction: r.direction,\n    timeFrame: r.timeframe,\n    // kolon adınız buysa\n    entryPrice: r.entry_price,\n    // yoksa entryPrice: r.entryPrice\n    recommendedLeverage: r.recommended_leverage,\n    targets: [r.target1, r.target2, r.target3],\n    stopLoss: r.stop_loss,\n    timestamp: r.timestamp\n  });\n  useEffect(() => {\n    // İlk yükleme\n    supabase.from('signals').select('*').order('timestamp', {\n      ascending: false\n    }).then(({\n      data,\n      error\n    }) => {\n      if (!error) setSignals(data.map(mapSignal));\n    });\n\n    // Realtime insert dinleme\n    const channel = supabase.channel('signals').on('postgres_changes', {\n      event: 'INSERT',\n      schema: 'public',\n      table: 'signals'\n    }, payload => {\n      setSignals(prev => [mapSignal(payload.new), ...prev]);\n    }).subscribe();\n    return () => supabase.removeChannel(channel);\n  }, []);\n\n  // Yeni sinyal eklemek için\n  const addSignal = async sig => {\n    // Optimistik olarak ekle\n    const temp = {\n      ...sig,\n      id: 'temp-' + Date.now()\n    };\n    setSignals(prev => [temp, ...prev]);\n\n    // DB'ye yaz\n    const {\n      data,\n      error\n    } = await supabase.from('signals').insert({\n      user_id: sig.userId,\n      username: sig.username,\n      symbol: sig.symbol,\n      direction: sig.direction,\n      timeframe: sig.timeFrame,\n      entry_price: sig.entryPrice,\n      recommended_leverage: sig.recommendedLeverage,\n      target1: sig.targets[0],\n      target2: sig.targets[1],\n      target3: sig.targets[2],\n      stop_loss: sig.stopLoss,\n      timestamp: sig.timestamp\n    }).select().single();\n    if (!error) {\n      // Geçici kaydı gerçeği ile değiştir\n      setSignals(prev => prev.map(s => s.id === temp.id ? mapSignal(data) : s));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(SignalsContext.Provider, {\n    value: {\n      signals,\n      addSignal\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(SignalsProvider, \"9eYi07E/CN6PFRDo2boxZzV6kmA=\");\n_c = SignalsProvider;\nvar _c;\n$RefreshReg$(_c, \"SignalsProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","supabase","jsxDEV","_jsxDEV","SignalsContext","signals","addSignal","SignalsProvider","children","_s","setSignals","mapSignal","r","id","userId","user_id","username","symbol","direction","timeFrame","timeframe","entryPrice","entry_price","recommendedLeverage","recommended_leverage","targets","target1","target2","target3","stopLoss","stop_loss","timestamp","from","select","order","ascending","then","data","error","map","channel","on","event","schema","table","payload","prev","new","subscribe","removeChannel","sig","temp","Date","now","insert","single","s","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Yusuf Uygur/Documents/GitHub/KriptoMentorSon/kriptoMentorWeb/frontend/src/context/SignalsContext.js"],"sourcesContent":["// src/context/SignalsContext.js\r\nimport React, { createContext, useState, useEffect } from 'react'\r\nimport { supabase } from '../lib/supabaseClient'\r\n\r\nexport const SignalsContext = createContext({\r\n  signals: [],\r\n  addSignal: async () => {}\r\n})\r\n\r\nexport function SignalsProvider({ children }) {\r\n  const [signals, setSignals] = useState([])\r\n\r\n  // Satır verisini JS modeline çeviren yardımcı\r\n  const mapSignal = r => ({\r\n    id: r.id,\r\n    userId: r.user_id,\r\n    username: r.username,\r\n    symbol: r.symbol,\r\n    direction: r.direction,\r\n    timeFrame: r.timeframe,            // kolon adınız buysa\r\n    entryPrice: r.entry_price,         // yoksa entryPrice: r.entryPrice\r\n    recommendedLeverage: r.recommended_leverage,\r\n    targets: [r.target1, r.target2, r.target3],\r\n    stopLoss: r.stop_loss,\r\n    timestamp: r.timestamp\r\n  })\r\n\r\n  useEffect(() => {\r\n    // İlk yükleme\r\n    supabase\r\n      .from('signals')\r\n      .select('*')\r\n      .order('timestamp', { ascending: false })\r\n      .then(({ data, error }) => {\r\n        if (!error) setSignals(data.map(mapSignal))\r\n      })\r\n\r\n    // Realtime insert dinleme\r\n    const channel = supabase\r\n      .channel('signals')\r\n      .on('postgres_changes',\r\n          { event: 'INSERT', schema: 'public', table: 'signals' },\r\n          payload => {\r\n            setSignals(prev => [ mapSignal(payload.new), ...prev ])\r\n          }\r\n      )\r\n      .subscribe()\r\n\r\n    return () => supabase.removeChannel(channel)\r\n  }, [])\r\n\r\n  // Yeni sinyal eklemek için\r\n  const addSignal = async sig => {\r\n    // Optimistik olarak ekle\r\n    const temp = { ...sig, id: 'temp-' + Date.now() }\r\n    setSignals(prev => [temp, ...prev])\r\n\r\n    // DB'ye yaz\r\n    const { data, error } = await supabase\r\n      .from('signals')\r\n      .insert({\r\n        user_id: sig.userId,\r\n        username: sig.username,\r\n        symbol: sig.symbol,\r\n        direction: sig.direction,\r\n        timeframe: sig.timeFrame,\r\n        entry_price: sig.entryPrice,\r\n        recommended_leverage: sig.recommendedLeverage,\r\n        target1: sig.targets[0],\r\n        target2: sig.targets[1],\r\n        target3: sig.targets[2],\r\n        stop_loss: sig.stopLoss,\r\n        timestamp: sig.timestamp\r\n      })\r\n      .select()\r\n      .single()\r\n\r\n    if (!error) {\r\n      // Geçici kaydı gerçeği ile değiştir\r\n      setSignals(prev =>\r\n        prev.map(s => (s.id === temp.id ? mapSignal(data) : s))\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <SignalsContext.Provider value={{ signals, addSignal }}>\r\n      {children}\r\n    </SignalsContext.Provider>\r\n  )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}