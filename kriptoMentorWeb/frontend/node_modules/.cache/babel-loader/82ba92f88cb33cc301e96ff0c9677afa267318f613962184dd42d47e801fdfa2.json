{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yusuf Uygur\\\\Documents\\\\GitHub\\\\KriptoMentorSon\\\\kriptoMentorWeb\\\\frontend\\\\src\\\\pages\\\\ProfilePage.js\",\n  _s = $RefreshSig$();\n// src/pages/ProfilePage.js\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { supabase } from '../lib/supabaseClient';\nimport { avatarList } from '../utils/avatars';\nimport { SignalsContext } from '../context/SignalsContext';\nimport './ProfilePage.css';\nimport { FaUserCircle } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProfilePage() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    signals: allSignals\n  } = useContext(SignalsContext);\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState(null);\n  const [profile, setProfile] = useState(null);\n  const [logoutModalVisible, setLogoutModalVisible] = useState(false);\n\n  // only for traders:\n  const [followersCount, setFollowersCount] = useState(0);\n\n  // only for investors:\n  const [followedTraderIds, setFollowedTraderIds] = useState([]);\n  const [followedTradersMap, setFollowedTradersMap] = useState({});\n  useEffect(() => {\n    (async () => {\n      // 1) session\n      const {\n        data: {\n          session\n        }\n      } = await supabase.auth.getSession();\n      const usr = session === null || session === void 0 ? void 0 : session.user;\n      if (!usr) {\n        navigate('/auth', {\n          replace: true\n        });\n        return;\n      }\n      setUser(usr);\n\n      // 2) load or create profile\n      let {\n        data: prof,\n        error\n      } = await supabase.from('profiles').select('full_name,bio,avatar_url,created_at,user_type').eq('user_id', usr.id).maybeSingle();\n      if (error) console.error(error);\n      if (!prof) {\n        const {\n          data: np\n        } = await supabase.from('profiles').insert({\n          user_id: usr.id,\n          full_name: '',\n          bio: '',\n          avatar_url: '',\n          user_type: 'investor'\n        }).single();\n        prof = np;\n      }\n      setProfile(prof);\n      if (prof.user_type === 'trader') {\n        // fetch only follower count\n        const {\n          count\n        } = await supabase.from('follows').select('*', {\n          head: true,\n          count: 'exact'\n        }).eq('trader_id', usr.id);\n        setFollowersCount(count || 0);\n      } else {\n        // investor: fetch whom they follow\n        const {\n          data: follows\n        } = await supabase.from('follows').select('trader_id').eq('investor_id', usr.id);\n        const traderIds = (follows || []).map(f => f.trader_id);\n        setFollowedTraderIds(traderIds);\n        if (traderIds.length) {\n          const {\n            data: traders\n          } = await supabase.from('profiles').select('user_id,full_name').in('user_id', traderIds);\n          const map = {};\n          traders.forEach(t => {\n            map[t.user_id] = t.full_name;\n          });\n          setFollowedTradersMap(map);\n        }\n      }\n      setLoading(false);\n    })();\n  }, [navigate]);\n  const openLogoutModal = () => setLogoutModalVisible(true);\n  const cancelLogout = () => setLogoutModalVisible(false);\n  const handleLogout = async () => {\n    await supabase.auth.signOut();\n    navigate('/auth', {\n      replace: true\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-page loader\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this);\n  }\n  const avatarItem = avatarList.find(a => a.id === profile.avatar_url);\n  const avatarSrc = avatarItem === null || avatarItem === void 0 ? void 0 : avatarItem.image;\n  const joinedDate = new Date(profile.created_at).toLocaleDateString();\n\n  // choose signals to display\n  const visibleSignals = profile.user_type === 'trader' ? allSignals.filter(s => s.userId === user.id) : allSignals.filter(s => followedTraderIds.includes(s.userId));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-header\",\n      children: [avatarSrc ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: avatarSrc,\n        alt: \"Avatar\",\n        className: \"avatar-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avatar-placeholder\",\n        children: \"\\uD83D\\uDC64\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"profile-name\",\n        children: profile.full_name || 'KriptoMentor Kullanıcısı'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"profile-email\",\n        children: user.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), profile.bio && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"profile-bio\",\n        children: profile.bio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"profile-joined\",\n        children: [\"Kat\\u0131l\\u0131m: \", joinedDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), profile.user_type === 'trader' && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"followers-count-clickable\",\n        onClick: () => navigate(`/app/profile/${user.id}/followers`),\n        children: [\"Takip\\xE7i: \", followersCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn edit-btn\",\n        onClick: () => navigate('/app/edit-profile'),\n        children: \"Profili D\\xFCzenle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn logout-btn\",\n        onClick: openLogoutModal,\n        children: \"\\xC7\\u0131k\\u0131\\u015F Yap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"signals-title\",\n      children: profile.user_type === 'investor' ? 'Takip Edilen Trader Gönderileri' : 'Paylaşılan Sinyaller'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), visibleSignals.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"empty-text\",\n      children: \"Hen\\xFCz sinyal payla\\u015Fmad\\u0131n\\u0131z.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"signals-list\",\n      children: visibleSignals.map(item => {\n        var _item$timeFrame;\n        // format date/time\n        const d = new Date(item.timestamp);\n        const dateStr = d.toLocaleDateString();\n        const timeStr = d.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        });\n        // trader name if investor\n        const traderName = profile.user_type === 'investor' ? followedTradersMap[item.userId] || 'Anonim' : null;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"signal-card\",\n          children: [profile.user_type === 'investor' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-row\",\n            children: [/*#__PURE__*/_jsxDEV(FaUserCircle, {\n              size: 18,\n              color: \"#1a73e8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"user-name\",\n              onClick: () => navigate(`/app/profile/${item.userId}`),\n              children: traderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"symbol\",\n              children: item.symbol\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"timestamp\",\n              children: [dateStr, \" \", timeStr]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"meta-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: `badge ${item.direction === 'LONG' ? 'long' : 'short'}`,\n              children: item.direction\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"badge timeframe\",\n              children: (_item$timeFrame = item.timeFrame) === null || _item$timeFrame === void 0 ? void 0 : _item$timeFrame.toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"divider\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"label\",\n                children: \"Entry Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"value\",\n                children: item.entryPrice\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"label\",\n                children: \"Leverage\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"value\",\n                children: [item.recommendedLeverage, \"x\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 19\n            }, this), item.targets.map((t, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"label\",\n                children: [\"Target \", i + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"value target\",\n                children: t\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 23\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 21\n            }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"label\",\n                children: \"Stop Loss\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"value stop\",\n                children: item.stopLoss\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 17\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }, this), profile.user_type === 'trader' && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"fab\",\n      onClick: () => navigate('/app/share-signal'),\n      children: \"\\uFF0B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }, this), logoutModalVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      onClick: cancelLogout,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"modal-title\",\n          children: \"\\xC7\\u0131k\\u0131\\u015F Yap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"modal-message\",\n          children: \"\\xC7\\u0131k\\u0131\\u015F yapmak istedi\\u011Finize emin misiniz?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-btn cancel\",\n            onClick: cancelLogout,\n            children: \"\\u0130ptal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-btn confirm\",\n            onClick: handleLogout,\n            children: \"\\xC7\\u0131k\\u0131\\u015F Yap\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n_s(ProfilePage, \"8LT+UDU6DfQt78v8oo+qUe0gyxo=\", false, function () {\n  return [useNavigate];\n});\n_c = ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useEffect","useState","useContext","useNavigate","supabase","avatarList","SignalsContext","FaUserCircle","jsxDEV","_jsxDEV","ProfilePage","_s","navigate","signals","allSignals","loading","setLoading","user","setUser","profile","setProfile","logoutModalVisible","setLogoutModalVisible","followersCount","setFollowersCount","followedTraderIds","setFollowedTraderIds","followedTradersMap","setFollowedTradersMap","data","session","auth","getSession","usr","replace","prof","error","from","select","eq","id","maybeSingle","console","np","insert","user_id","full_name","bio","avatar_url","user_type","single","count","head","follows","traderIds","map","f","trader_id","length","traders","in","forEach","t","openLogoutModal","cancelLogout","handleLogout","signOut","className","children","fileName","_jsxFileName","lineNumber","columnNumber","avatarItem","find","a","avatarSrc","image","joinedDate","Date","created_at","toLocaleDateString","visibleSignals","filter","s","userId","includes","src","alt","email","onClick","item","_item$timeFrame","d","timestamp","dateStr","timeStr","toLocaleTimeString","hour","minute","traderName","size","color","symbol","direction","timeFrame","toUpperCase","entryPrice","recommendedLeverage","targets","i","stopLoss","e","stopPropagation","_c","$RefreshReg$"],"sources":["C:/Users/Yusuf Uygur/Documents/GitHub/KriptoMentorSon/kriptoMentorWeb/frontend/src/pages/ProfilePage.js"],"sourcesContent":["// src/pages/ProfilePage.js\r\n\r\nimport React, { useEffect, useState, useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { supabase }    from '../lib/supabaseClient';\r\nimport { avatarList }  from '../utils/avatars';\r\nimport { SignalsContext } from '../context/SignalsContext';\r\nimport './ProfilePage.css';\r\nimport { FaUserCircle }  from 'react-icons/fa';\r\n\r\nexport default function ProfilePage() {\r\n  const navigate = useNavigate();\r\n  const { signals: allSignals } = useContext(SignalsContext);\r\n\r\n  const [loading, setLoading]           = useState(true);\r\n  const [user, setUser]                 = useState(null);\r\n  const [profile, setProfile]           = useState(null);\r\n  const [logoutModalVisible, setLogoutModalVisible] = useState(false);\r\n\r\n  // only for traders:\r\n  const [followersCount, setFollowersCount] = useState(0);\r\n\r\n  // only for investors:\r\n  const [followedTraderIds, setFollowedTraderIds] = useState([]);\r\n  const [followedTradersMap, setFollowedTradersMap] = useState({});\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      // 1) session\r\n      const { data:{ session } } = await supabase.auth.getSession();\r\n      const usr = session?.user;\r\n      if (!usr) {\r\n        navigate('/auth', { replace: true });\r\n        return;\r\n      }\r\n      setUser(usr);\r\n\r\n      // 2) load or create profile\r\n      let { data: prof, error } = await supabase\r\n        .from('profiles')\r\n        .select('full_name,bio,avatar_url,created_at,user_type')\r\n        .eq('user_id', usr.id)\r\n        .maybeSingle();\r\n      if (error) console.error(error);\r\n      if (!prof) {\r\n        const { data: np } = await supabase\r\n          .from('profiles')\r\n          .insert({\r\n            user_id: usr.id,\r\n            full_name: '',\r\n            bio: '',\r\n            avatar_url: '',\r\n            user_type: 'investor'\r\n          })\r\n          .single();\r\n        prof = np;\r\n      }\r\n      setProfile(prof);\r\n\r\n      if (prof.user_type === 'trader') {\r\n        // fetch only follower count\r\n        const { count } = await supabase\r\n          .from('follows')\r\n          .select('*', { head:true, count:'exact' })\r\n          .eq('trader_id', usr.id);\r\n        setFollowersCount(count || 0);\r\n      } else {\r\n        // investor: fetch whom they follow\r\n        const { data: follows } = await supabase\r\n          .from('follows')\r\n          .select('trader_id')\r\n          .eq('investor_id', usr.id);\r\n        const traderIds = (follows || []).map(f => f.trader_id);\r\n        setFollowedTraderIds(traderIds);\r\n\r\n        if (traderIds.length) {\r\n          const { data: traders } = await supabase\r\n            .from('profiles')\r\n            .select('user_id,full_name')\r\n            .in('user_id', traderIds);\r\n          const map = {};\r\n          traders.forEach(t => { map[t.user_id] = t.full_name; });\r\n          setFollowedTradersMap(map);\r\n        }\r\n      }\r\n\r\n      setLoading(false);\r\n    })();\r\n  }, [navigate]);\r\n\r\n  const openLogoutModal = () => setLogoutModalVisible(true);\r\n  const cancelLogout    = () => setLogoutModalVisible(false);\r\n  const handleLogout    = async () => {\r\n    await supabase.auth.signOut();\r\n    navigate('/auth', { replace: true });\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"profile-page loader\">\r\n        <div className=\"spinner\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const avatarItem = avatarList.find(a => a.id === profile.avatar_url);\r\n  const avatarSrc  = avatarItem?.image;\r\n  const joinedDate = new Date(profile.created_at).toLocaleDateString();\r\n\r\n  // choose signals to display\r\n  const visibleSignals = profile.user_type === 'trader'\r\n    ? allSignals.filter(s => s.userId === user.id)\r\n    : allSignals.filter(s => followedTraderIds.includes(s.userId));\r\n\r\n  return (\r\n    <div className=\"profile-page\">\r\n      <div className=\"profile-header\">\r\n        {avatarSrc\r\n          ? <img src={avatarSrc} alt=\"Avatar\" className=\"avatar-img\"/>\r\n          : <div className=\"avatar-placeholder\">👤</div>\r\n        }\r\n        <h2 className=\"profile-name\">\r\n          {profile.full_name || 'KriptoMentor Kullanıcısı'}\r\n        </h2>\r\n        <p className=\"profile-email\">{user.email}</p>\r\n        {profile.bio && <p className=\"profile-bio\">{profile.bio}</p>}\r\n        <p className=\"profile-joined\">Katılım: {joinedDate}</p>\r\n\r\n        {profile.user_type === 'trader' && (\r\n          <p\r\n            className=\"followers-count-clickable\"\r\n            onClick={() => navigate(`/app/profile/${user.id}/followers`)}\r\n          >\r\n            Takipçi: {followersCount}\r\n          </p>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"profile-buttons\">\r\n        <button\r\n          className=\"btn edit-btn\"\r\n          onClick={() => navigate('/app/edit-profile')}\r\n        >\r\n          Profili Düzenle\r\n        </button>\r\n        <button\r\n          className=\"btn logout-btn\"\r\n          onClick={openLogoutModal}\r\n        >\r\n          Çıkış Yap\r\n        </button>\r\n      </div>\r\n\r\n      <h3 className=\"signals-title\">\r\n        {profile.user_type === 'investor'\r\n          ? 'Takip Edilen Trader Gönderileri'\r\n          : 'Paylaşılan Sinyaller'}\r\n      </h3>\r\n\r\n      {visibleSignals.length === 0 ? (\r\n        <p className=\"empty-text\">Henüz sinyal paylaşmadınız.</p>\r\n      ) : (\r\n        <ul className=\"signals-list\">\r\n          {visibleSignals.map(item => {\r\n            // format date/time\r\n            const d = new Date(item.timestamp);\r\n            const dateStr = d.toLocaleDateString();\r\n            const timeStr = d.toLocaleTimeString([], {\r\n              hour:'2-digit',\r\n              minute:'2-digit'\r\n            });\r\n            // trader name if investor\r\n            const traderName = profile.user_type === 'investor'\r\n              ? followedTradersMap[item.userId] || 'Anonim'\r\n              : null;\r\n\r\n            return (\r\n              <li key={item.id} className=\"signal-card\">\r\n                {profile.user_type === 'investor' && (\r\n                  <div className=\"user-row\">\r\n                    <FaUserCircle size={18} color=\"#1a73e8\" />\r\n                    <button\r\n                      className=\"user-name\"\r\n                      onClick={() => navigate(`/app/profile/${item.userId}`)}\r\n                    >\r\n                      {traderName}\r\n                    </button>\r\n                  </div>\r\n                )}\r\n                <div className=\"header-row\">\r\n                  <h3 className=\"symbol\">{item.symbol}</h3>\r\n                  <small className=\"timestamp\">{dateStr} {timeStr}</small>\r\n                </div>\r\n                <div className=\"meta-row\">\r\n                  <span className={`badge ${item.direction==='LONG'?'long':'short'}`}>\r\n                    {item.direction}\r\n                  </span>\r\n                  <span className=\"badge timeframe\">\r\n                    {item.timeFrame?.toUpperCase()}\r\n                  </span>\r\n                </div>\r\n                <div className=\"divider\" />\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    <span className=\"label\">Entry Price</span>\r\n                    <span className=\"value\">{item.entryPrice}</span>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <span className=\"label\">Leverage</span>\r\n                    <span className=\"value\">{item.recommendedLeverage}x</span>\r\n                  </div>\r\n                  {item.targets.map((t,i) => (\r\n                    <div key={i} className=\"row\">\r\n                      <span className=\"label\">Target {i+1}</span>\r\n                      <span className=\"value target\">{t}</span>\r\n                    </div>\r\n                  ))}\r\n                  <div className=\"row\">\r\n                    <span className=\"label\">Stop Loss</span>\r\n                    <span className=\"value stop\">{item.stopLoss}</span>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      )}\r\n\r\n      {profile.user_type === 'trader' && (\r\n        <button\r\n          className=\"fab\"\r\n          onClick={() => navigate('/app/share-signal')}\r\n        >\r\n          ＋\r\n        </button>\r\n      )}\r\n\r\n      {logoutModalVisible && (\r\n        <div className=\"modal-overlay\" onClick={cancelLogout}>\r\n          <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\r\n            <h3 className=\"modal-title\">Çıkış Yap</h3>\r\n            <p className=\"modal-message\">Çıkış yapmak istediğinize emin misiniz?</p>\r\n            <div className=\"modal-buttons\">\r\n              <button className=\"modal-btn cancel\" onClick={cancelLogout}>\r\n                İptal\r\n              </button>\r\n              <button className=\"modal-btn confirm\" onClick={handleLogout}>\r\n                Çıkış Yap\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}