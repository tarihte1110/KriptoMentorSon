{"ast":null,"code":"// src/context/SignalsContext.js\nimport React,{createContext,useState,useEffect}from'react';import{supabase}from'../lib/supabaseClient';import{jsx as _jsx}from\"react/jsx-runtime\";export const SignalsContext=/*#__PURE__*/createContext({signals:[],addSignal:async()=>{}});export function SignalsProvider(_ref){let{children}=_ref;const[signals,setSignals]=useState([]);// Satır verisini JS modeline çeviren yardımcı\nconst mapSignal=r=>({id:r.id,userId:r.user_id,username:r.username,symbol:r.symbol,direction:r.direction,timeFrame:r.timeframe,// kolon adınız buysa\nentryPrice:r.entry_price,// yoksa entryPrice: r.entryPrice\nrecommendedLeverage:r.recommended_leverage,targets:[r.target1,r.target2,r.target3],stopLoss:r.stop_loss,timestamp:r.timestamp});useEffect(()=>{// İlk yükleme\nsupabase.from('signals').select('*').order('timestamp',{ascending:false}).then(_ref2=>{let{data,error}=_ref2;if(!error)setSignals(data.map(mapSignal));});// Realtime insert dinleme\nconst channel=supabase.channel('signals').on('postgres_changes',{event:'INSERT',schema:'public',table:'signals'},payload=>{setSignals(prev=>[mapSignal(payload.new),...prev]);}).subscribe();return()=>supabase.removeChannel(channel);},[]);// Yeni sinyal eklemek için\nconst addSignal=async sig=>{// Optimistik olarak ekle\nconst temp={...sig,id:'temp-'+Date.now()};setSignals(prev=>[temp,...prev]);// DB'ye yaz\nconst{data,error}=await supabase.from('signals').insert({user_id:sig.userId,username:sig.username,symbol:sig.symbol,direction:sig.direction,timeframe:sig.timeFrame,entry_price:sig.entryPrice,recommended_leverage:sig.recommendedLeverage,target1:sig.targets[0],target2:sig.targets[1],target3:sig.targets[2],stop_loss:sig.stopLoss,timestamp:sig.timestamp}).select().single();if(!error){// Geçici kaydı gerçeği ile değiştir\nsetSignals(prev=>prev.map(s=>s.id===temp.id?mapSignal(data):s));}};return/*#__PURE__*/_jsx(SignalsContext.Provider,{value:{signals,addSignal},children:children});}","map":{"version":3,"names":["React","createContext","useState","useEffect","supabase","jsx","_jsx","SignalsContext","signals","addSignal","SignalsProvider","_ref","children","setSignals","mapSignal","r","id","userId","user_id","username","symbol","direction","timeFrame","timeframe","entryPrice","entry_price","recommendedLeverage","recommended_leverage","targets","target1","target2","target3","stopLoss","stop_loss","timestamp","from","select","order","ascending","then","_ref2","data","error","map","channel","on","event","schema","table","payload","prev","new","subscribe","removeChannel","sig","temp","Date","now","insert","single","s","Provider","value"],"sources":["C:/Users/Yusuf Uygur/Documents/GitHub/KriptoMentorSon/kriptoMentorWeb/frontend/src/context/SignalsContext.js"],"sourcesContent":["// src/context/SignalsContext.js\r\nimport React, { createContext, useState, useEffect } from 'react'\r\nimport { supabase } from '../lib/supabaseClient'\r\n\r\nexport const SignalsContext = createContext({\r\n  signals: [],\r\n  addSignal: async () => {}\r\n})\r\n\r\nexport function SignalsProvider({ children }) {\r\n  const [signals, setSignals] = useState([])\r\n\r\n  // Satır verisini JS modeline çeviren yardımcı\r\n  const mapSignal = r => ({\r\n    id: r.id,\r\n    userId: r.user_id,\r\n    username: r.username,\r\n    symbol: r.symbol,\r\n    direction: r.direction,\r\n    timeFrame: r.timeframe,            // kolon adınız buysa\r\n    entryPrice: r.entry_price,         // yoksa entryPrice: r.entryPrice\r\n    recommendedLeverage: r.recommended_leverage,\r\n    targets: [r.target1, r.target2, r.target3],\r\n    stopLoss: r.stop_loss,\r\n    timestamp: r.timestamp\r\n  })\r\n\r\n  useEffect(() => {\r\n    // İlk yükleme\r\n    supabase\r\n      .from('signals')\r\n      .select('*')\r\n      .order('timestamp', { ascending: false })\r\n      .then(({ data, error }) => {\r\n        if (!error) setSignals(data.map(mapSignal))\r\n      })\r\n\r\n    // Realtime insert dinleme\r\n    const channel = supabase\r\n      .channel('signals')\r\n      .on('postgres_changes',\r\n          { event: 'INSERT', schema: 'public', table: 'signals' },\r\n          payload => {\r\n            setSignals(prev => [ mapSignal(payload.new), ...prev ])\r\n          }\r\n      )\r\n      .subscribe()\r\n\r\n    return () => supabase.removeChannel(channel)\r\n  }, [])\r\n\r\n  // Yeni sinyal eklemek için\r\n  const addSignal = async sig => {\r\n    // Optimistik olarak ekle\r\n    const temp = { ...sig, id: 'temp-' + Date.now() }\r\n    setSignals(prev => [temp, ...prev])\r\n\r\n    // DB'ye yaz\r\n    const { data, error } = await supabase\r\n      .from('signals')\r\n      .insert({\r\n        user_id: sig.userId,\r\n        username: sig.username,\r\n        symbol: sig.symbol,\r\n        direction: sig.direction,\r\n        timeframe: sig.timeFrame,\r\n        entry_price: sig.entryPrice,\r\n        recommended_leverage: sig.recommendedLeverage,\r\n        target1: sig.targets[0],\r\n        target2: sig.targets[1],\r\n        target3: sig.targets[2],\r\n        stop_loss: sig.stopLoss,\r\n        timestamp: sig.timestamp\r\n      })\r\n      .select()\r\n      .single()\r\n\r\n    if (!error) {\r\n      // Geçici kaydı gerçeği ile değiştir\r\n      setSignals(prev =>\r\n        prev.map(s => (s.id === temp.id ? mapSignal(data) : s))\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <SignalsContext.Provider value={{ signals, addSignal }}>\r\n      {children}\r\n    </SignalsContext.Provider>\r\n  )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}