{"ast":null,"code":"// src/pages/AuthPage.js\nimport React,{useState}from'react';import{useNavigate}from'react-router-dom';import{signIn}from'../services/auth';// eskiden signUp kullanıyordunuz\nimport{supabase}from'../lib/supabaseClient';// şimdi supabase’e direkt başvuracağız\nimport{FaEye,FaEyeSlash}from'react-icons/fa';import'./AuthPage.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function AuthPage(){const[mode,setMode]=useState('login');// 'login' veya 'signup'\nconst[userType,setUserType]=useState('investor');// 'investor' veya 'trader'\nconst[username,setUsername]=useState('');const[email,setEmail]=useState('');const[password,setPassword]=useState('');const[confirmPassword,setConfirmPassword]=useState('');const[showPassword,setShowPassword]=useState(false);const[showConfirm,setShowConfirm]=useState(false);const[message,setMessage]=useState('');const navigate=useNavigate();const handleSubmit=async e=>{e.preventDefault();setMessage('');if(mode==='signup'){// 1) Tüm alanları doldur\nif(!username.trim()||!email.trim()||!password){setMessage('Lütfen tüm alanları doldurun.');return;}// 2) Parola kontrolü\nif(password!==confirmPassword){setMessage('Parolalar eşleşmiyor!');return;}// 3) Auth kaydı\nconst{data,error:signUpError}=await supabase.auth.signUp({email,password});if(signUpError){setMessage(signUpError.message);return;}// 4) profiles tablosuna satır ekle\nconst userId=data.user.id;const{error:profileError}=await supabase.from('profiles').insert({user_id:userId,user_type:userType,full_name:username,bio:'',avatar_url:''});if(profileError){setMessage(profileError.message);return;}setMessage('Kayıt başarılı! Lütfen e-postanızı onaylayın.');}else{// login\nconst{error}=await signIn(email,password);if(error){setMessage(error.message);}else{navigate('/',{replace:true});}}};return/*#__PURE__*/_jsx(\"div\",{className:\"auth-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"auth-box\",children:[/*#__PURE__*/_jsx(\"h2\",{children:mode==='signup'?'Kayıt Ol':'KriptoMentor Giriş'}),mode==='signup'&&/*#__PURE__*/_jsxs(\"div\",{className:\"user-type-container\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:`type-button ${userType==='investor'?'active':''}`,onClick:()=>setUserType('investor'),children:\"Yat\\u0131r\\u0131mc\\u0131\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:`type-button ${userType==='trader'?'active':''}`,onClick:()=>setUserType('trader'),children:\"Trader\"})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[mode==='signup'&&/*#__PURE__*/_jsxs(\"label\",{children:[\"Kullan\\u0131c\\u0131 Ad\\u0131\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:username,onChange:e=>setUsername(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"E-posta\",/*#__PURE__*/_jsx(\"input\",{type:\"email\",value:email,onChange:e=>setEmail(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Parola\",/*#__PURE__*/_jsxs(\"div\",{className:\"password-wrapper\",children:[/*#__PURE__*/_jsx(\"input\",{type:showPassword?'text':'password',value:password,onChange:e=>setPassword(e.target.value),required:true}),/*#__PURE__*/_jsx(\"span\",{className:\"toggle-password\",onClick:()=>setShowPassword(v=>!v),children:showPassword?/*#__PURE__*/_jsx(FaEyeSlash,{size:18}):/*#__PURE__*/_jsx(FaEye,{size:18})})]})]}),mode==='signup'&&/*#__PURE__*/_jsxs(\"label\",{children:[\"Parola (Tekrar)\",/*#__PURE__*/_jsxs(\"div\",{className:\"password-wrapper\",children:[/*#__PURE__*/_jsx(\"input\",{type:showConfirm?'text':'password',value:confirmPassword,onChange:e=>setConfirmPassword(e.target.value),required:true}),/*#__PURE__*/_jsx(\"span\",{className:\"toggle-password\",onClick:()=>setShowConfirm(v=>!v),children:showConfirm?/*#__PURE__*/_jsx(FaEyeSlash,{size:18}):/*#__PURE__*/_jsx(FaEye,{size:18})})]})]}),message&&/*#__PURE__*/_jsx(\"p\",{className:\"auth-message\",children:message}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"auth-button\",children:mode==='signup'?'Kayıt Ol':'Giriş Yap'})]}),/*#__PURE__*/_jsxs(\"p\",{className:\"switch-text\",children:[mode==='signup'?'Zaten hesabınız var mı?':'Hesabınız yok mu?',/*#__PURE__*/_jsx(\"button\",{className:\"switch-button\",onClick:()=>{setMode(m=>m==='signup'?'login':'signup');setMessage('');},children:mode==='signup'?'Giriş Yap':'Kayıt Ol'})]})]})});}","map":{"version":3,"names":["React","useState","useNavigate","signIn","supabase","FaEye","FaEyeSlash","jsx","_jsx","jsxs","_jsxs","AuthPage","mode","setMode","userType","setUserType","username","setUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","showPassword","setShowPassword","showConfirm","setShowConfirm","message","setMessage","navigate","handleSubmit","e","preventDefault","trim","data","error","signUpError","auth","signUp","userId","user","id","profileError","from","insert","user_id","user_type","full_name","bio","avatar_url","replace","className","children","type","onClick","onSubmit","value","onChange","target","required","v","size","m"],"sources":["C:/Users/Yusuf Uygur/Documents/GitHub/KriptoMentorSon/kriptoMentorWeb/frontend/src/pages/AuthPage.js"],"sourcesContent":["// src/pages/AuthPage.js\r\n\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { signIn } from '../services/auth';       // eskiden signUp kullanıyordunuz\r\nimport { supabase } from '../lib/supabaseClient'; // şimdi supabase’e direkt başvuracağız\r\nimport { FaEye, FaEyeSlash } from 'react-icons/fa';\r\nimport './AuthPage.css';\r\n\r\nexport default function AuthPage() {\r\n  const [mode, setMode]                 = useState('login');      // 'login' veya 'signup'\r\n  const [userType, setUserType]         = useState('investor');  // 'investor' veya 'trader'\r\n  const [username, setUsername]         = useState('');\r\n  const [email, setEmail]               = useState('');\r\n  const [password, setPassword]         = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showConfirm, setShowConfirm]   = useState(false);\r\n  const [message, setMessage]           = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setMessage('');\r\n\r\n    if (mode === 'signup') {\r\n      // 1) Tüm alanları doldur\r\n      if (!username.trim() || !email.trim() || !password) {\r\n        setMessage('Lütfen tüm alanları doldurun.');\r\n        return;\r\n      }\r\n      // 2) Parola kontrolü\r\n      if (password !== confirmPassword) {\r\n        setMessage('Parolalar eşleşmiyor!');\r\n        return;\r\n      }\r\n      // 3) Auth kaydı\r\n      const { data, error: signUpError } = await supabase.auth.signUp({\r\n        email,\r\n        password\r\n      });\r\n      if (signUpError) {\r\n        setMessage(signUpError.message);\r\n        return;\r\n      }\r\n      // 4) profiles tablosuna satır ekle\r\n      const userId = data.user.id;\r\n      const { error: profileError } = await supabase\r\n        .from('profiles')\r\n        .insert({\r\n          user_id: userId,\r\n          user_type: userType,\r\n          full_name: username,\r\n          bio: '',\r\n          avatar_url: ''\r\n        });\r\n      if (profileError) {\r\n        setMessage(profileError.message);\r\n        return;\r\n      }\r\n      setMessage('Kayıt başarılı! Lütfen e-postanızı onaylayın.');\r\n    } else {\r\n      // login\r\n      const { error } = await signIn(email, password);\r\n      if (error) {\r\n        setMessage(error.message);\r\n      } else {\r\n        navigate('/', { replace: true });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <div className=\"auth-box\">\r\n        <h2>{mode === 'signup' ? 'Kayıt Ol' : 'KriptoMentor Giriş'}</h2>\r\n\r\n        {mode === 'signup' && (\r\n          <div className=\"user-type-container\">\r\n            <button\r\n              type=\"button\"\r\n              className={`type-button ${userType==='investor' ? 'active' : ''}`}\r\n              onClick={() => setUserType('investor')}\r\n            >\r\n              Yatırımcı\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className={`type-button ${userType==='trader' ? 'active' : ''}`}\r\n              onClick={() => setUserType('trader')}\r\n            >\r\n              Trader\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          {mode === 'signup' && (\r\n            <label>\r\n              Kullanıcı Adı\r\n              <input\r\n                type=\"text\"\r\n                value={username}\r\n                onChange={e => setUsername(e.target.value)}\r\n                required\r\n              />\r\n            </label>\r\n          )}\r\n\r\n          <label>\r\n            E-posta\r\n            <input\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={e => setEmail(e.target.value)}\r\n              required\r\n            />\r\n          </label>\r\n\r\n          <label>\r\n            Parola\r\n            <div className=\"password-wrapper\">\r\n              <input\r\n                type={showPassword ? 'text' : 'password'}\r\n                value={password}\r\n                onChange={e => setPassword(e.target.value)}\r\n                required\r\n              />\r\n              <span\r\n                className=\"toggle-password\"\r\n                onClick={() => setShowPassword(v => !v)}\r\n              >\r\n                {showPassword\r\n                  ? <FaEyeSlash size={18} />\r\n                  : <FaEye      size={18} />}\r\n              </span>\r\n            </div>\r\n          </label>\r\n\r\n          {mode === 'signup' && (\r\n            <label>\r\n              Parola (Tekrar)\r\n              <div className=\"password-wrapper\">\r\n                <input\r\n                  type={showConfirm ? 'text' : 'password'}\r\n                  value={confirmPassword}\r\n                  onChange={e => setConfirmPassword(e.target.value)}\r\n                  required\r\n                />\r\n                <span\r\n                  className=\"toggle-password\"\r\n                  onClick={() => setShowConfirm(v => !v)}\r\n                >\r\n                  {showConfirm\r\n                    ? <FaEyeSlash size={18}/>\r\n                    : <FaEye      size={18}/>}\r\n                </span>\r\n              </div>\r\n            </label>\r\n          )}\r\n\r\n          {message && <p className=\"auth-message\">{message}</p>}\r\n\r\n          <button type=\"submit\" className=\"auth-button\">\r\n            {mode === 'signup' ? 'Kayıt Ol' : 'Giriş Yap'}\r\n          </button>\r\n        </form>\r\n\r\n        <p className=\"switch-text\">\r\n          {mode === 'signup'\r\n            ? 'Zaten hesabınız var mı?'\r\n            : 'Hesabınız yok mu?'}\r\n          <button\r\n            className=\"switch-button\"\r\n            onClick={() => {\r\n              setMode(m => m==='signup' ? 'login' : 'signup');\r\n              setMessage('');\r\n            }}\r\n          >\r\n            {mode === 'signup' ? 'Giriş Yap' : 'Kayıt Ol'}\r\n          </button>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}